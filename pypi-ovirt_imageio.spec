#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
# Using build pattern: distutils3
# autospec version: v27
# autospec commit: 65cf152
#
Name     : pypi-ovirt_imageio
Version  : 2.5.1
Release  : 19
URL      : https://files.pythonhosted.org/packages/93/f0/e13f4f6d7722ef41f06687d199780ef7c9a52fa860f32351f12eb98a35e9/ovirt_imageio-2.5.1.tar.gz
Source0  : https://files.pythonhosted.org/packages/93/f0/e13f4f6d7722ef41f06687d199780ef7c9a52fa860f32351f12eb98a35e9/ovirt_imageio-2.5.1.tar.gz
Summary  : Transfer disk images on oVirt system
Group    : Development/Tools
License  : GPL-2.0 GPL-2.0+
Requires: pypi-ovirt_imageio-bin = %{version}-%{release}
Requires: pypi-ovirt_imageio-license = %{version}-%{release}
Requires: pypi-ovirt_imageio-python = %{version}-%{release}
Requires: pypi-ovirt_imageio-python3 = %{version}-%{release}
BuildRequires : buildreq-distutils3
BuildRequires : pypi(py)
BuildRequires : pypi-pluggy
BuildRequires : pypi-pytest
BuildRequires : pypi-tox
BuildRequires : pypi-virtualenv
# Suppress stripping binaries
%define __strip /bin/true
%define debug_package %{nil}

%description
# SPDX-License-Identifier: GPL-2.0-or-later
# An example for an ovirt-imageio configuration file.
# Below is a list of available options which can be configured.
# imageio supports drop-in configuration, which means there can
# be multiple config files, which are all read in succession to get
# final configuration.
# imageio searches the following directories for config files:
# - /etc/ovirt-imageio/conf.d/ where admins should place their configs.
#   Also oVirt engine-setup writes there a config file.
# - /usr/lib/ovirt-imageio/conf.d/ where vendor configs should be placed.
# Config files have to be in the directories listed above and must have *.conf
# suffix. Files are read in alphabetical order, taking into account only
# base name of the config file, not directory name. E.g. if there are two
# config files, 50-vdsm.conf and 99-admin.conf (see conf.d listing below),
# config options specified in 99-admin.conf will overwrite corresponding
# config options in 50-vdsm.conf.
#     $ tree /etc/ovirt-imageio/conf.d/
#       /etc/ovirt-imageio/conf.d/
#       ├── 50-vdsm.conf
#       └── 99-admin.conf
# You can check the final configuration by executing
#     ovirt-imageio --show-config

%package bin
Summary: bin components for the pypi-ovirt_imageio package.
Group: Binaries
Requires: pypi-ovirt_imageio-license = %{version}-%{release}

%description bin
bin components for the pypi-ovirt_imageio package.


%package license
Summary: license components for the pypi-ovirt_imageio package.
Group: Default

%description license
license components for the pypi-ovirt_imageio package.


%package python
Summary: python components for the pypi-ovirt_imageio package.
Group: Default
Requires: pypi-ovirt_imageio-python3 = %{version}-%{release}

%description python
python components for the pypi-ovirt_imageio package.


%package python3
Summary: python3 components for the pypi-ovirt_imageio package.
Group: Default
Requires: python3-core
Provides: pypi(ovirt_imageio)

%description python3
python3 components for the pypi-ovirt_imageio package.


%prep
%setup -q -n ovirt_imageio-2.5.1
cd %{_builddir}/ovirt_imageio-2.5.1
pushd ..
cp -a ovirt_imageio-2.5.1 buildavx2
popd

%build
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1751982723
export GCC_IGNORE_WERROR=1
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
CLEAR_INTERMEDIATE_CFLAGS="$CLEAR_INTERMEDIATE_CFLAGS -O3 -fdebug-types-section -femit-struct-debug-baseonly -ffat-lto-objects -flto=auto -g1 -gno-column-info -gno-variable-location-views -gz=zstd "
CLEAR_INTERMEDIATE_FCFLAGS="$CLEAR_INTERMEDIATE_FFLAGS -O3 -fdebug-types-section -femit-struct-debug-baseonly -ffat-lto-objects -flto=auto -g1 -gno-column-info -gno-variable-location-views -gz=zstd "
CLEAR_INTERMEDIATE_FFLAGS="$CLEAR_INTERMEDIATE_FFLAGS -O3 -fdebug-types-section -femit-struct-debug-baseonly -ffat-lto-objects -flto=auto -g1 -gno-column-info -gno-variable-location-views -gz=zstd "
CLEAR_INTERMEDIATE_CXXFLAGS="$CLEAR_INTERMEDIATE_CXXFLAGS -O3 -fdebug-types-section -femit-struct-debug-baseonly -ffat-lto-objects -flto=auto -g1 -gno-column-info -gno-variable-location-views -gz=zstd "
CFLAGS="$CLEAR_INTERMEDIATE_CFLAGS"
CXXFLAGS="$CLEAR_INTERMEDIATE_CXXFLAGS"
FFLAGS="$CLEAR_INTERMEDIATE_FFLAGS"
FCFLAGS="$CLEAR_INTERMEDIATE_FCFLAGS"
ASFLAGS="$CLEAR_INTERMEDIATE_ASFLAGS"
LDFLAGS="$CLEAR_INTERMEDIATE_LDFLAGS"
export MAKEFLAGS=%{?_smp_mflags}
python3 setup.py build

pushd ../buildavx2/
CFLAGS="$CLEAR_INTERMEDIATE_CFLAGS -march=x86-64-v3 -Wl,-z,x86-64-v3 "
CXXFLAGS="$CLEAR_INTERMEDIATE_CXXFLAGS -march=x86-64-v3 -Wl,-z,x86-64-v3 "
FFLAGS="$CLEAR_INTERMEDIATE_FFLAGS -march=x86-64-v3 -Wl,-z,x86-64-v3 "
FCFLAGS="$CLEAR_INTERMEDIATE_FCFLAGS -march=x86-64-v3 "
LDFLAGS="$CLEAR_INTERMEDIATE_LDFLAGS -march=x86-64-v3 "
python3 setup.py build

popd
%install
export GCC_IGNORE_WERROR=1
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
CLEAR_INTERMEDIATE_CFLAGS="$CLEAR_INTERMEDIATE_CFLAGS -O3 -fdebug-types-section -femit-struct-debug-baseonly -ffat-lto-objects -flto=auto -g1 -gno-column-info -gno-variable-location-views -gz=zstd "
CLEAR_INTERMEDIATE_FCFLAGS="$CLEAR_INTERMEDIATE_FFLAGS -O3 -fdebug-types-section -femit-struct-debug-baseonly -ffat-lto-objects -flto=auto -g1 -gno-column-info -gno-variable-location-views -gz=zstd "
CLEAR_INTERMEDIATE_FFLAGS="$CLEAR_INTERMEDIATE_FFLAGS -O3 -fdebug-types-section -femit-struct-debug-baseonly -ffat-lto-objects -flto=auto -g1 -gno-column-info -gno-variable-location-views -gz=zstd "
CLEAR_INTERMEDIATE_CXXFLAGS="$CLEAR_INTERMEDIATE_CXXFLAGS -O3 -fdebug-types-section -femit-struct-debug-baseonly -ffat-lto-objects -flto=auto -g1 -gno-column-info -gno-variable-location-views -gz=zstd "
CFLAGS="$CLEAR_INTERMEDIATE_CFLAGS"
CXXFLAGS="$CLEAR_INTERMEDIATE_CXXFLAGS"
FFLAGS="$CLEAR_INTERMEDIATE_FFLAGS"
FCFLAGS="$CLEAR_INTERMEDIATE_FCFLAGS"
ASFLAGS="$CLEAR_INTERMEDIATE_ASFLAGS"
LDFLAGS="$CLEAR_INTERMEDIATE_LDFLAGS"
export MAKEFLAGS=%{?_smp_mflags}
rm -rf %{buildroot}
mkdir -p %{buildroot}/usr/share/package-licenses/pypi-ovirt_imageio
cp %{_builddir}/ovirt_imageio-%{version}/LICENSES/GPL-2.0-or-later.txt %{buildroot}/usr/share/package-licenses/pypi-ovirt_imageio/3cb34cfc72e87654683f2894299adf912d14b284 || :
python3 -tt setup.py build  install --root=%{buildroot}
echo ----[ mark ]----
cat %{buildroot}/usr/lib/python3*/site-packages/*/requires.txt || :
echo ----[ mark ]----
pushd ../buildavx2/
CFLAGS="$CLEAR_INTERMEDIATE_CFLAGS -march=x86-64-v3 -Wl,-z,x86-64-v3 "
CXXFLAGS="$CLEAR_INTERMEDIATE_CXXFLAGS -march=x86-64-v3 -Wl,-z,x86-64-v3 "
FFLAGS="$CLEAR_INTERMEDIATE_FFLAGS -march=x86-64-v3 -Wl,-z,x86-64-v3 "
FCFLAGS="$CLEAR_INTERMEDIATE_FCFLAGS -march=x86-64-v3 "
LDFLAGS="$CLEAR_INTERMEDIATE_LDFLAGS -march=x86-64-v3 "
python3 -tt setup.py build install --root=%{buildroot}-v3
popd
/usr/bin/elf-move.py avx2 %{buildroot}-v3 %{buildroot} %{buildroot}/usr/share/clear/filemap/filemap-%{name}

%files
%defattr(-,root,root,-)

%files bin
%defattr(-,root,root,-)
/usr/bin/ovirt-imageio
/usr/bin/ovirt-imageioctl
/usr/bin/ovirt-img

%files license
%defattr(0644,root,root,0755)
/usr/share/package-licenses/pypi-ovirt_imageio/3cb34cfc72e87654683f2894299adf912d14b284

%files python
%defattr(-,root,root,-)

%files python3
%defattr(-,root,root,-)
/V3/usr/lib/python3*/*
/usr/lib/python3*/*
